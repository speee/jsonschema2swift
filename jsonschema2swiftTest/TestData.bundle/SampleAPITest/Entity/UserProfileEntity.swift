/// UserProfileEntity.swift
/// generated by jsonschema2swift

import Foundation
import SwiftyJSON


/// user_profile
///
/// ユーザプロフィール
public struct UserProfileEntity: EntityType {

  /// 身長
  var height: Double?
  /// プロフィール画像URL
  var image: String?
  /// 入社日
  var registedAt: Date
  /// 所属クラブ
  var clubs: [String]?
  /// 体重
  var weight: Double?
  /// TOEICのスコア
  var toeicScore: Int?
  /// 生年月日
  var birthday: Date?
  /// 社員ID
  var userId: Int

  public init?(json: JSON) {
    guard !json.isEmpty else {
      return nil
    }
    self.height = json["height"].double
    self.image = json["image"].string
    self.registedAt = Date.generateFromAPIFormat(string: json["registed_at"].string)!
    self.clubs = json["clubs"].arrayValue.map { String(json: $0)! } as? [String]
    self.weight = json["weight"].double
    self.toeicScore = json["toeic_score"].int
    self.birthday = Date.generateFromAPIFormat(string: json["birthday"].string)
    self.userId = json["user_id"].int!
  }

  static func ==(left: UserProfileEntity, right: UserProfileEntity) -> Bool {
    return left.user_id == right.user_id

  }

  var serialized: [String: Any] {
    var param: [String: Any] = [:]
    param["height"] = height?.serialized
    param["image"] = image?.serialized
    param["registedAt"] = registedAt.serialized
    param["clubs"] = clubs?.serialized
    param["weight"] = weight?.serialized
    param["toeicScore"] = toeicScore?.serialized
    param["birthday"] = birthday?.serialized
    param["userId"] = userId.serialized
    return param
  }
}
